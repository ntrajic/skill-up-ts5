        npx create-react-app add-ts-to-existing-react-app  <enter>

        <add-ts-to-existing-react-app> 
        note: existing-react-app is built with javascript, and will run in browser at port 3000
        after: npx run start <enter>

        Now, to add typescript on the top of javascript!!!
        ==================================================

        1. npm install typescript --save-dev <enter>
        ============================================

        \add-ts-to-existing-react-app> npm install typescript --save-dev
        npm WARN @apideck/better-ajv-errors@0.3.6 requires a peer of ajv@>=8 but none is installed. You must install peer dependencies yourself.
        npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@2.3.3 (node_modules\fsevents):
        npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.3: wanted {"os":"darwin","arch":"any"} (current: {"os":"win32","arch":"x64"})

        + typescript@5.4.2
        added 1 package from 1 contributor and audited 1572 packages in 7.562s

        264 packages are looking for funding
        run `npm fund` for details

        found 2 vulnerabilities (1 moderate, 1 high)
        run `npm audit fix` to fix them, or `npm audit` for details

        2. npx tsc --init <enter>   // local version of tsc compiler
        ==============================================================
        OUT:
        Created a new tsconfig.json with:   + src + build                                                                                    
                                                                                                                     TS 
        target: es2016
        module: commonjs
        strict: true
        esModuleInterop: true
        skipLibCheck: true
        forceConsistentCasingInFileNames: true

        3 NODE, REACT TYPES 
        ===================
        npm install --save-dev @types/node @types/react @types/react-dom @types/jest <enter>
        
        4. convert js to ts

        App.js -> rename -> App.tsx + remove react logo
        index.js ->rename-> index.tsx

        + some edits in App.txs, index.txs   rootEl, remouve logo w/ atom orbitals

        \add-ts-to-existing-react-app> 
        pm run start  <enter>   // run react-ts app  w/out looking

        OUT: 

        > add-ts-to-existing-react-app@0.1.0 start C:\SRC\React\TypeScript\essentialts\essential-typescript-5\skill-up-ts5\ts-react\add-Starting the development server...

        =============

        WARNING: You are currently running a version of TypeScript which is not officially supported by @typescript-eslint/typescript-estree.

        You may find that it works just fine, or you may not.

        SUPPORTED TYPESCRIPT VERSIONS: >=3.3.1 <5.2.0

        YOUR TYPESCRIPT VERSION: 5.4.2

        Please only submit bug reports when using the officially supported version.

        =============
        One of your dependencies, babel-preset-react-app, is importing the
        "@babel/plugin-proposal-private-property-in-object" package without
        declaring it in its dependencies. This is currently working because
        "@babel/plugin-proposal-private-property-in-object" is already in your
        Compiled successfully!

        You can now view add-ts-to-existing-react-app in the browser.

        Local:            http://localhost:3000
        On Your Network:  http://192.168.1.68:3000

        Note that the development build is not optimized.
        To create a production build, use npm run build.

        webpack compiled successfully
        No issues found.


        5. Add HelloTS.tsx component, to be imported by App.txs
        ========================================================

        remove unnecessary react logo and rest, => Hello, Nikola message centered in browser body
